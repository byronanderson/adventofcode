const { visibleAsteroids, bestBaseLocation, nthDestroyed } = require('./index');

function assertions(map, bestSpot, visibleCount) {
  expect(bestBaseLocation(map)).toEqual(bestSpot);
  expect(visibleAsteroids(map, bestSpot).length).toEqual(visibleCount);
}

test('works', async () => {
  expect(bestBaseLocation(
    `
      .#..#
      .....
      #####
      ....#
      ...##
    `
  )).toEqual([3, 4]);

  expect(visibleAsteroids(
    `
      .#..##.###...#######
      ##.############..##.
      .#.######.########.#
      .###.#######.####.#.
      #####.##.#.##.###.##
      ..#####..#.#########
      ####################
      #.####....###.#.#.##
      ##.#################
      #####.##.###..####..
      ..######..##.#######
      ####.##.####...##..#
      .#####..#.######.###
      ##...#.##########...
      #.##########.#######
      .####.#.###.###.#.##
      ....##.##.###..#####
      .#.#.###########.###
      #.#.#.#####.####.###
      ###.##.####.##.#..##
    `,
    [11, 13]
  ).length).toEqual(209); // 210

  assertions(
    `
      .#..#..###
      ####.###.#
      ....###.#.
      ..###.##.#
      ##.##.#.#.
      ....###..#
      ..#.#..#.#
      #..#.#.###
      .##...##.#
      .....#.#..
    `,
    [6, 3],
    40 // 40
  );

  expect(nthDestroyed(
    1,
    `
      .#....#####...#..
      ##...##.#####..##
      ##...#...#.#####.
      ..#.....X...###..
      ..#.#.....#....##
    `,
    [8, 3]
  )).toEqual([8, 1]);

  expect(nthDestroyed(
    199,
    `
      .#..##.###...#######
      ##.############..##.
      .#.######.########.#
      .###.#######.####.#.
      #####.##.#.##.###.##
      ..#####..#.#########
      ####################
      #.####....###.#.#.##
      ##.#################
      #####.##.###..####..
      ..######..##.#######
      ####.##.####...##..#
      .#####..#.######.###
      ##...#.##########...
      #.##########.#######
      .####.#.###.###.#.##
      ....##.##.###..#####
      .#.#.###########.###
      #.#.#.#####.####.###
      ###.##.####.##.#..##
    `,
    [11, 13]
  )).toEqual([8,2]);
});
